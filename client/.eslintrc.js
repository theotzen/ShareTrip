const rules = {
    'max-len': ['error', 120, 2, { ignoreUrls: true }],
    'no-console': [0],
    'no-restricted-syntax': 'off',
    'no-continue': 'off',
    'no-underscore-dangle': 'off',
    'import/extensions': 'off',
    'import/no-unresolved': 'off',
    'import/prefer-default-export': 0,
    'operator-linebreak': 'off',
    'implicit-arrow-linebreak': 'off',
    'react/destructuring-assignment': 'off',
    'react/no-unescaped-entities': 0,
    'jsx-a11y/click-events-have-key-events': 'off',
    'jsx-a11y/no-static-element-interactions': 'off',
    'object-shorthand': 0,
    'no-useless-return': 0,
    'no-restricted-globals': 'off',
    'no-plusplus': 'off',
    'no-unneeded-ternary': 'off',
    'camelcase': 'off',
    'prettier/prettier': [0, { useTabs: false }],
    'react/function-component-definition': 0,
    'react/jsx-no-constructed-context-values': 'off',
    'react/jsx-props-no-spreading': 'off',
    'react/jsx-one-expression-per-line': 'off',
    'react/no-unused-prop-types': 'off',
    'react/prop-types': 'off',
    'react/react-in-jsx-scope': 'off',
    'react/require-default-props': 'off',
    'react/jsx-no-bind': 'off',
    'react/jsx-filename-extension': [2, { extensions: ['.ts', '.tsx'] }],
    'lines-between-class-members': [
        'error',
        'always',
        { exceptAfterSingleLine: true },
    ],
};

module.exports = {
    extends: [
        'airbnb',
        'plugin:prettier/recommended',
        'prettier',
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:react/recommended',
        'plugin:react/jsx-runtime'
    ],
    parser: '@babel/eslint-parser',
    parserOptions: {
        requireConfigFile: false,
    },
    rules,
    env: {
        browser: true,
        commonjs: true,
        node: true,
        jest: true,
        es6: true,
    },
    plugins: [
        'react',
        'react-hooks',
        'jsx-a11y',
        '@babel/eslint-plugin',
        'prettier',
    ],
    settings: {
        ecmascript: 6,
        jsx: true,
        'import/resolver': {
            node: {
                paths: ['src'],
            },
        },
        'import/parsers': {
            '@typescript-eslint/parser': ['.ts', '.tsx'],
        },
    },
};
